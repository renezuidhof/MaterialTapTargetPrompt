/*
 * Copyright (C) 2016-2022 Samuel Wall
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.hiya.jacoco-android'
    id 'maven-publish'
    id 'signing'
}

// Maven Group ID for the artifact
group = 'uk.co.samuelwall'
version rootProject.versionName

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions.unitTests.includeAndroidResources true

    namespace 'uk.co.samuelwall.materialtaptargetprompt'

    buildFeatures {
        compose true
    }
}

configurations {
    javadocApi
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'

    implementation 'androidx.annotation:annotation:[1.1.0,)'
    implementation 'androidx.compose.runtime:runtime:1.1.1'
    implementation 'androidx.compose.ui:ui:1.1.1'
    implementation "androidx.compose.foundation:foundation:1.1.1"
    implementation "androidx.compose.material:material:1.1.1"


    testImplementation 'androidx.test:core:1.4.0'

    implementation 'androidx.lifecycle:lifecycle-extensions:[2.2.0,)'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:[2.2.0,)"

    compileOnly 'androidx.fragment:fragment-ktx:[1.1.0,)'

    testImplementation 'androidx.test.ext:junit:1.1.3'

    testImplementation 'androidx.fragment:fragment-testing:1.4.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.7.2'
    testImplementation 'org.robolectric:robolectric:4.6'
    testImplementation 'org.mockito:mockito-core:3.11.2'

    javadocApi 'androidx.annotation:annotation:1.3.0'

}

//gradlew clean jacocoTestReport

project.afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                from components.release
                pom {
                    name = 'material-tap-target-prompt'
                    description = 'A Tap Target implementation in Android based on Material Design Onboarding guidelines.'
                    url = 'https://github.com/sjwall/MaterialTapTargetPrompt'

                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'sjwall'
                            name = 'Samuel Wall'
                            email = 'oss@samuelwall.co.uk'
                        }
                    }
                    scm {
                        connection = 'https://github.com/sjwall/MaterialTapTargetPrompt.git'
                        developerConnection = 'https://github.com/sjwall/MaterialTapTargetPrompt.git'
                        url = 'https://github.com/sjwall/MaterialTapTargetPrompt'
                    }
                }
            }
        }
        repositories {
            Properties properties = new Properties()
            File propertiesFile = project.rootProject.file('local.properties')
            if (propertiesFile.exists()) {
                properties.load(propertiesFile.newDataInputStream())
            }

            maven {
                name = "ossrh"
                url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
                credentials {
                    username = properties.get("sona.usr")
                    password = properties.get("sona.key")
                }
            }
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/sjwall/MaterialTapTargetPrompt")
                // Github Package
                credentials {
                    //Fetch these details from the properties file or from Environment variables
                    username = properties.get("gpr.usr")
                    password = properties.get("gpr.key")
                }
            }
        }
    }
}
